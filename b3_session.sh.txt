1.transform 選定
#transformのパターン 
python b3_session_cnn.py --multirun name=compare_transform3 seed=0,42,100 transform.pattern=null,a,b,c,d,ab,ac,ad,bc,bd,cd,abc,abd,acd,bcd,abcd
abcd=0.917,ac=0.914使用することに決定

2.モデル　選定
python b3_session_cnn.py --multirun name=compare_model transform.pattern=null,abcd seed=0,42,100 model.type=0,1 model.enc_dim=64,128,256
python b3_session_cnn.py --multirun name=compare_model transform.pattern=null,abcd seed=0,42,100 model.type=2 model.enc_dim=64,128
type 2 enc_dim 64を使用

3.重み正則化
python b3_session_cnn.py -m name=compare_weightdecay2 transform.pattern=abcd seed=0,42,100 model.type=5 model.enc_dim=64 optimizer.name=Adam,SGD optimizer.weight_decay=0,1.0e-6
python ./a_tests/gmail.py
train accが不十分


モデル選定

python b3_session_cnn.py -m transform.pattern="ad" name="test_model" model.type=3  model.enc_dim=64
92.3

self.in_w = in_w
self.in_h = in_h
self.fc_dim = enc_dim * int(in_h/2/2/2) * int(in_w/2/2/2) #pooling回数分割る
self.class_num = class_num

self.encoder = nn.Sequential(
    EncoderBlock(3      , enc_dim),
    EncoderBlock(enc_dim, enc_dim*2),
    EncoderBlock(enc_dim*2, enc_dim*2),
    nn.MaxPool2d(kernel_size=2),#h,wが1/2

    EncoderBlock(enc_dim*2, enc_dim*4),
    EncoderBlock(enc_dim*4, enc_dim*4),
    EncoderBlock(enc_dim*4, enc_dim*8),
    nn.MaxPool2d(kernel_size=2),

    EncoderBlock(enc_dim*8, enc_dim*8),
    EncoderBlock(enc_dim*8, enc_dim*4),
    EncoderBlock(enc_dim*4, enc_dim*4),
    nn.MaxPool2d(kernel_size=2),

    EncoderBlock(enc_dim*4, enc_dim*2),
    EncoderBlock(enc_dim*2, enc_dim*2),
    EncoderBlock(enc_dim*2, enc_dim),
)


self.fc = nn.Sequential(
    nn.Linear(self.fc_dim, 512),
    nn.ReLU(),
    nn.Linear(512, 256),
    nn.ReLU(),
    nn.Linear(256, self.class_num),
)
